@startuml

    class Command {
        <<abstract>>
        +execute(programmes: ProgrammeList, history: History): CommandResult
        +equals(other: Object): boolean
    }

    class ExitCommand {
    }

    class InvalidCommand {
    }

    class CommandResult {
        -message: String
        +CommandResult(message: String)
        +getMessage(): String
        +equals(other: Object): boolean
    }

    class ProgrammeCommand {
        <<abstract>>
        #programmeIndex: int
        #dayIndex: int
        +equals(other: Object): boolean
    }

    class EditCommand {
        <<abstract>>
        #exerciseIndex: int
        +execute(programmes: ProgrammeList): CommandResult
    }

    class WaterCommand {
        <<abstract>>
        #date: LocalDate
    }

    class MealCommand {
        <<abstract>>
        #date: LocalDate
    }

    class HistoryCommand{
    }

    Command <|-- ProgrammeCommand
    Command <|-- ExitCommand
    Command <|-- InvalidCommand
    Command <|-- WaterCommand
    Command <|-- MealCommand
    Command <|-- HistoryCommand
    ProgrammeCommand <|-- EditCommand
    Command ..> CommandResult
@enduml