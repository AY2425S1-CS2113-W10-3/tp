@startuml
    class EditCommand {
        <<abstract>>
        #exerciseIndex: int
        +EditCommand(programmeIndex: int, dayIndex: int, exerciseIndex: int)
        +EditCommand(programmeIndex: int, dayIndex: int)
        +EditCommand(programmeIndex: int)
        +execute(programmes: ProgrammeList): CommandResult
    }

    class CreateDayCommand {
        # createdDay: Day
        + CreateDayCommand(programmeIndex: int, createdDay: Day)
        +execute(programmes: ProgrammeList): CommandResult
    }
    class CreateExerciseCommand {
        # createdExercise: Exercise
        + CreateExerciseCommand(programmeIndex: int, dayIndex: int, createdExercise: Exercise)
        + execute(programmes: ProgrammeList): CommandResult
    }
    class DeleteDayCommand {
        + DeleteDayCommand(programmeIndex: int, dayIndex: int)
        + execute(programmes: ProgrammeList): CommandResult
    }
    class DeleteExerciseCommand {
        + DeleteExerciseCommand(programmeIndex: int, dayIndex: int, exerciseIndex: int)
        + execute(programmes: ProgrammeList): CommandResult
    }
    class EditExerciseCommand {
        # update: ExerciseUpdate
        + EditExerciseCommand(programmeIndex: int, dayIndex: int, exerciseIndex: int, update: ExerciseUpdate)
        + execute(programmes: ProgrammeList): CommandResult
    }

    EditCommand <|--- CreateDayCommand
    EditCommand <|--- CreateExerciseCommand
    EditCommand <|--- DeleteDayCommand
    EditCommand <|--- DeleteExerciseCommand
    EditCommand <|--- EditExerciseCommand

@enduml